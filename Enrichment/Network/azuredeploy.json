{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
    "parameters": {
      "PlaybookName": {
        "type": "string",
        "defaultValue": "DataLake-Enrichment-Network",
        "metadata": {
          "description": "Name of the Logic App."
        }
      },
      "ADXClusterURI":{
        "type":"string",
        "metadata":{
          "description": "URL of the ADX Cluster"
        }
      },
      "ADXDatabaseName":{
        "defaultValue": "DBadxdata001",
        "type": "string",
        "metadata": {
            "description": "Your ADX Database Name"
          }
      }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "ADXConnectionName": "[concat('azuredataexplorer-', parameters('PlaybookName'))]"
    },
  "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ADXConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('ADXConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/kusto')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
          "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
          "[resourceId('Microsoft.Web/connections', variables('ADXConnectionName'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Convert_Array_to_String": {
              "runAfter": {
                "Fill_IP_Array": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@string(variables('IPList'))"
            },
            "Enrichment_Query_-_TI_Destination": {
              "runAfter": {
                "Enrichment_Query_-_TI_Source": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "cluster": "[parameters('ADXClusterURI')]",
                  "csl": "external_table('paloaltotraffic')\n| where IngestTime >= ago(3h) and IngestTime < now()\n| where DestinationIP in (@{outputs('Remove_Brackets')}) \n| summarize outbound_bytes = sum(SentBytes), inbound_bytes = sum(ReceivedBytes), events= count(), srcIPs= make_set(src, 10), make_set(SourcePort,10), make_set(ApplicationProtocol,10) by DestinationIP, DestinationPort, DeviceAction\n| take 20",
                  "db": "[parameters('ADXDataBaseName')]"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['kusto']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/ListKustoResults/false"
              }
            },
            "Enrichment_Query_-_TI_Source": {
              "runAfter": {
                "Remove_Brackets": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "cluster": "[parameters('ADXClusterURI')]",
                  "csl": "external_table('paloaltotraffic')\n| where IngestTime >= ago(3h) and IngestTime < now()\n| where SourceIP in (@{outputs('Remove_Brackets')}) \n| summarize outbound_bytes = sum(SentBytes), inbound_bytes = sum(ReceivedBytes),  events= count(), destIPs = make_set(DestinationIP, 10), make_set(DestinationPort,10), make_set(ApplicationProtocol,10) by SourceIP, SourcePort, DeviceAction, bin(TimeGenerated, 1h)\n| take 20",
                  "db": "[parameters('ADXDataBaseName')]"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['kusto']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/ListKustoResults/false"
              }
            },
            "Entities_-_Get_IPs": {
              "runAfter": {
                "Initialize_IP_Array": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/ip"
              }
            },
            "Fill_IP_Array": {
              "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
              "actions": {
                "Append_to_array_variable": {
                  "runAfter": {},
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "IPList",
                    "value": "@items('Fill_IP_Array')?['Address']"
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_IPs": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Initialize_IP_Array": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IPList",
                    "type": "array"
                  }
                ]
              }
            },
            "Remove_Brackets": {
              "runAfter": {
                "Convert_Array_to_String": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@replace(replace(outputs('Convert_Array_to_String'),']',''),'[','')"
            },
            "TI_Destination_-_Add_Comment": {
              "actions": {
                "TI_Destination_Comment": {
                  "runAfter": {
                    "TI_Destination_Table": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@triggerBody()?['object']?['id']",
                      "message": "<p><strong>Connections to TI:<br>\n</strong><br>\n@{body('TI_Destination_Table')}<br>\n</p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "TI_Destination_Table": {
                  "runAfter": {},
                  "type": "Table",
                  "inputs": {
                    "format": "HTML",
                    "from": "@body('Enrichment_Query_-_TI_Destination')?['value']"
                  }
                }
              },
              "runAfter": {
                "Enrichment_Query_-_TI_Destination": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "No_TI_Destination_Connections_Found": {
                    "runAfter": {},
                    "type": "ApiConnection",
                    "inputs": {
                      "body": {
                        "incidentArmId": "@triggerBody()?['object']?['id']",
                        "message": "<p>Logic app found no connections to TI in the past 3 hours ingestion.&nbsp;</p>"
                      },
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/Incidents/Comment"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "greater": [
                      "@length(body('Enrichment_Query_-_TI_Destination')?['value'])",
                      0
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "TI_Source_-_Add_Comment": {
              "actions": {
                "TI_Source_Comment": {
                  "runAfter": {
                    "TI_Source_Table": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "incidentArmId": "@triggerBody()?['object']?['id']",
                      "message": "<p><strong>Connections from TI:<br>\n</strong><br>\n@{body('TI_Source_Table')}<br>\n</p>"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Incidents/Comment"
                  }
                },
                "TI_Source_Table": {
                  "runAfter": {},
                  "type": "Table",
                  "inputs": {
                    "format": "HTML",
                    "from": "@body('Enrichment_Query_-_TI_Source')?['value']"
                  }
                }
              },
              "runAfter": {
                "Enrichment_Query_-_TI_Destination": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "No_TI_Source_Connections_Found": {
                    "runAfter": {},
                    "type": "ApiConnection",
                    "inputs": {
                      "body": {
                        "incidentArmId": "@triggerBody()?['object']?['id']",
                        "message": "<p>Logic app found no connections from TI in the past 3 hours ingestion.&nbsp;</p>"
                      },
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/Incidents/Comment"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "greater": [
                      "@length(body('Enrichment_Query_-_TI_Source')?['value'])",
                      0
                    ]
                  }
                ]
              },
              "type": "If"
            }
          },
          "outputs": {}
        },
        "parameters": {
            "$connections": {
              "value": {
                "azuresentinel": {
                  "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]",
                  "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                  "connectionName": "[variables('AzureSentinelConnectionName')]",
                  "connectionProperties": {
                    "authentication": {
                      "type": "ManagedServiceIdentity"
                    }
                  }
                },
                "kusto": {
                    "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/kusto')]",
                      "connectionId": "[resourceId('Microsoft.Web/connections', variables('ADXConnectionName'))]",
                    "connectionName": "[variables('ADXConnectionName')]",
                    "connectionProperties": {
                      "authentication": {
                        "type": "ManagedServiceIdentity"
                      }
                    }
                  }
              }
            }
          }
      },
      "identity": {
        "type": "SystemAssigned"
      }
    }
  ],
  "outputs": {}
}
