{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "WorkspaceName": {
        "type": "string",
        "metadata": {
          "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
        }
      }
    },
    "variables": {
        "WorkspaceID": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
    },
    "resources": [
      {
        "type": "Microsoft.OperationalInsights/workspaces",
        "apiVersion": "2017-03-15-preview",
        "name": "[parameters('WorkspaceName')]",
        "location": "[resourceGroup().location]",
        "resources": [
          {
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "ASim_NetworkSessionCustom",
            "dependsOn": [
              "[variables('WorkspaceID')]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "ASIM NetworkSession custom parser",
              "category": "Security",
              "FunctionAlias": "ASim_NetworkSessionCustom",
              "query": "union isfuzzy=true\nASim_NetworkSessionCustom_SummariesInbound(pack=pack),\nASim_NetworkSessionCustom_SummariesOutbound()\n| project-reorder TimeGenerated, SrcIpAddr, DstIpAddr, NetworkDirection, DvcAction, Eventcount, SrcBytes, DstBytes\n",
              "version": 1,
              "functionParameters": "pack:bool=false"      
            }
          },
          {
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "ASim_NetworkSessionCustom_SummariesInbound",
            "dependsOn": [
              "[variables('WorkspaceID')]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Inbound Network Sesison Summaries",
              "category": "Security",
              "FunctionAlias": "ASim_NetworkSessionCustom_SummariesInbound",
              "query": "let NWParser=(disabled:bool=false, pack:bool=false){SummariesNetworkInbound_CL\n| extend SBytes= tolong(OutBytes_d), DBytes = tolong(InBytes_d)\n| project-rename DstIpAddr = IP_s, SrcBytes=SBytes, DstBytes = DBytes, NetworkDirection = direction_s,\nEventcount = ConnectionsCount_d, DvcAction=SimplifiedDeviceAction_s\n| project-keep TimeGenerated, DstIpAddr, SrcBytes, DstBytes, NetworkDirection, Eventcount, DvcAction\n};\nNWParser(disabled=false, pack=false)\n",
              "version": 1,
              "functionParameters": "pack:bool=false"      
            }
          },{
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "ASim_NetworkSessionCustom_SummariesOutbound",
            "dependsOn": [
              "[variables('WorkspaceID')]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Outbound Network Sesison Summaries",
              "category": "Security",
              "FunctionAlias": "ASim_NetworkSessionCustom_SummariesOutbound",
              "query": "let NWParser=(disabled:bool=false){SummariesNetworkOutbound_CL\n| extend SBytes= tolong(OutBytes_d), DBytes = tolong(InBytes_d)\n| project-rename SrcIpAddr = IP_s, SrcBytes=SBytes, DstBytes = DBytes, NetworkDirection = direction_s,\nEventcount = ConnectionsCount_d, DvcAction=SimplifiedDeviceAction_s\n| project-keep TimeGenerated, SrcIpAddr, SrcBytes, DstBytes, NetworkDirection, Eventcount, DvcAction\n};\nNWParser(false)\n",
              "version": 1,
              "functionParameters": "pack:bool=false"      
            }
          },
          {
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "Im_NetworkSessionCustom",
            "dependsOn": [
              "[variables('WorkspaceID')]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Filtered Custom Network Session",
              "category": "Security",
              "FunctionAlias": "Im_NetworkSessionCustom",
              "query": "union isfuzzy=true\nIm_NetworkSessionCustom_SummariesInbound(starttime= starttime, endtime= endtime, srcipaddr_has_any_prefix= srcipaddr_has_any_prefix, dstipaddr_has_any_prefix= dstipaddr_has_any_prefix, ipaddr_has_any_prefix= ipaddr_has_any_prefix, dstportnumber= dstportnumber, hostname_has_any= hostname_has_any, dvcaction= dvcaction, eventresult= eventresult, pack= pack),\nIm_NetworkSessionCustom_SummariesOutbound(starttime= starttime, endtime= endtime, srcipaddr_has_any_prefix= srcipaddr_has_any_prefix, dstipaddr_has_any_prefix= dstipaddr_has_any_prefix, ipaddr_has_any_prefix= ipaddr_has_any_prefix, dstportnumber= dstportnumber, hostname_has_any= hostname_has_any, dvcaction= dvcaction, eventresult= eventresult, pack=pack)",
              "version": 1,
              "functionParameters": "starttime:datetime = datetime(null),endtime:datetime = datetime(null),srcipaddr_has_any_prefix:dynamic = dynamic([]),dstipaddr_has_any_prefix:dynamic = dynamic([]),ipaddr_has_any_prefix:dynamic = dynamic([]),hostname_has_any:dynamic = dynamic([]),dvcaction:dynamic = dynamic([]),eventresult:string = '*',disabled:bool = false,dstportnumber:int = int(null),pack:bool = false"      
            }
          },
          {
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "Im_NetworkSessionCustomInbound",
            "dependsOn": [
              "[variables('WorkspaceID')]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Filtered Inbound Network Sesison Summaries",
              "category": "Security",
              "FunctionAlias": "Im_NetworkSessionCustomInbound",
              "query": "let src_or_any=set_union(srcipaddr_has_any_prefix, ipaddr_has_any_prefix); \nlet dst_or_any=set_union(dstipaddr_has_any_prefix, ipaddr_has_any_prefix);  \nlet NWParser = (\n    starttime: datetime=datetime(null), \n    endtime: datetime=datetime(null),\n    srcipaddr_has_any_prefix: dynamic=dynamic([]), \n    dstipaddr_has_any_prefix: dynamic=dynamic([]), \n    ipaddr_has_any_prefix: dynamic=dynamic([]),\n    dstportnumber: int=int(null), \n    hostname_has_any: dynamic=dynamic([]), \n    dvcaction: dynamic=dynamic([]), \n    eventresult: string='*', \n    pack: bool = false) {\n    SummariesNetworkInbound_CL\n    | where (isnull(starttime) or TimeGenerated >= starttime)\n        and (isnull(endtime) or TimeGenerated <= endtime)\n    | where array_length(srcipaddr_has_any_prefix) == 0\n    | where array_length(dst_or_any) == 0 or has_any_ipv4_prefix(IP_s, dst_or_any)\n    | where (array_length(dvcaction) == 0) or SimplifiedDeviceAction_s has_any (dvcaction)\n    | extend SBytes= tolong\n(OutBytes_d), DBytes = tolong(InBytes_d), SrcIpAddr = '0.0.0.0'\n    | project-rename\n        DstIpAddr = IP_s,\n        SrcBytes=SBytes,\n        DstBytes = DBytes,\n        NetworkDirection = direction_s, \n        Eventcount = ConnectionsCount_d,\n        DvcAction=SimplifiedDeviceAction_s\n    | project-keep\n        TimeGenerated,\n        DstIpAddr,\n        SrcBytes,\n        DstBytes,\n        NetworkDirection,\n        Eventcount,\n        DvcAction,\n        SrcIpAddr\n};\nNWParser (starttime, endtime, srcipaddr_has_any_prefix, dstipaddr_has_any_prefix, ipaddr_has_any_prefix, dstportnumber, hostname_has_any, dvcaction, eventresult, pack)",
              "version": 1,
              "functionParameters": "disabled:bool = false,starttime:datetime = datetime(null),endtime:datetime = datetime(null),srcipaddr_has_any_prefix:dynamic = dynamic([]),dstipaddr_has_any_prefix:dynamic = dynamic([]),hostname_has_any:dynamic = dynamic([]),dvcaction:dynamic = dynamic([]),dstportnumber:int = int(null)\n"      
            }
          },
          {
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "Im_NetworkSessionCustom_SummariesOutbound",
            "dependsOn": [
              "[variables('WorkspaceID')]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Filtered Outbound Network Sesison Summaries",
              "category": "Security",
              "FunctionAlias": "Im_NetworkSessionCustom_SummariesOutbound",
              "query": "let src_or_any=set_union(srcipaddr_has_any_prefix, ipaddr_has_any_prefix); \nlet dst_or_any=set_union(dstipaddr_has_any_prefix, ipaddr_has_any_prefix);  \nlet NWParser = (\n    starttime: datetime=datetime(null), \n    endtime: datetime=datetime(null),\n    srcipaddr_has_any_prefix: dynamic=dynamic([]), \n    dstipaddr_has_any_prefix: dynamic=dynamic([]), \n    ipaddr_has_any_prefix: dynamic=dynamic([]),\n    dstportnumber: int=int(null), \n    hostname_has_any: dynamic=dynamic([]), \n    dvcaction: dynamic=dynamic([]), \n    eventresult: string='*', \n    pack: bool = false) {\n    SummariesNetworkOutbound_CL\n    | where (isnull(starttime) or TimeGenerated >= starttime)\n        and (isnull(endtime) or TimeGenerated <= endtime)\n    | where array_length(dstipaddr_has_any_prefix) == 0\n    | where array_length(src_or_any) == 0 or has_any_ipv4_prefix(IP_s, src_or_any)\n    | where (array_length(dvcaction) == 0) or SimplifiedDeviceAction_s has_any (dvcaction)\n    | extend SBytes= tolon\n(OutBytes_d), DBytes = tolong(InBytes_d), DstIpAddr='0.0.0.0'\n    | project-rename\n        SrcIpAddr = IP_s,\n        SrcBytes=SBytes,\n        DstBytes = DBytes,\n        NetworkDirection = direction_s, \n        Eventcount = ConnectionsCount_d,\n        DvcAction=SimplifiedDeviceAction_s\n    | project-keep\n        TimeGenerated,\n        SrcIpAddr,\n        SrcBytes,\n        DstBytes,\n        NetworkDirection,\n        Eventcount,\n        DvcAction,\n        DstIpAddr\n};\nNWParser (starttime, endtime, srcipaddr_has_any_prefix, dstipaddr_has_any_prefix, ipaddr_has_any_prefix, dstportnumber, hostname_has_any, dvcaction, eventresult, pack)",
              "version": 1,
              "functionParameters": "starttime:datetime = datetime(null),endtime:datetime = datetime(null),srcipaddr_has_any_prefix:dynamic = dynamic([]),dstipaddr_has_any_prefix:dynamic = dynamic([]),ipaddr_has_any_prefix:dynamic = dynamic([]),dstportnumber:int = int(null),hostname_has_any:dynamic = dynamic([]),dvcaction:dynamic = dynamic([])"      
            }
          }
        ]
      }
    ]
  }